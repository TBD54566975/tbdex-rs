{
  "name": "@tbdex/sdk",
  "version": "0.1.0",
  "type": "module",
  "description": "",
  "files": [
    "dist",
    "src"
  ],
  "main": "./dist/index.cjs",
  "module": "./dist/index.mjs",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    },
    "./browser": {
      "import": "./dist/browser.mjs",
      "require": "./dist/browser.js"
    }
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TBD54566975/tbdex-rs.git"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@types/chai": "4.3.0",
    "@types/mocha": "9.1.0",
    "@web/test-runner": "0.18.0",
    "@web/test-runner-playwright": "0.11.0",
    "base64url": "^3.0.1",
    "chai": "4.3.10",
    "esbuild": "0.19.9",
    "mocha": "10.2.0",
    "rimraf": "5.0.5",
    "typescript": "^5.6.2"
  },
  "scripts": {
    "clean": "rimraf pkg tests/compiled dist",
    "build:browser:cjs": "node bundle-browser-cjs.js",
    "build:browser:esm": "node bundle-browser-esm.js",
    "build:node:cjs": "node bundle-nodejs-cjs.js",
    "build:node:esm": "node bundle-nodejs-esm.js",
    "build:types": "tsc --declaration --emitDeclarationOnly --outFile dist/index.d.ts && ./declaration-hack.sh",
    "build:wasm": "./bundle-wasm/build.sh && node ./bundle-wasm/bundle.js",
    "build": "npm run build:wasm && npm run build:types && npm run build:browser:cjs && npm run build:browser:esm && npm run build:node:esm && npm run build:node:cjs",
    "test:node:cjs": "tsc -p tests/tsconfig.json && node tests/bundle-nodejs-cjs.js && mocha --config .mocharc.cjs.json",
    "test:node:esm": "tsc -p tests/tsconfig.json && node tests/bundle-nodejs-esm.js && mocha --config .mocharc.esm.json",
    "test:browser:cjs": "tsc -p tests/tsconfig.json && node tests/bundle-browser-cjs.js && web-test-runner --config web-test-runner.cjs.config.mjs",
    "test:browser:esm": "tsc -p tests/tsconfig.json && node tests/bundle-browser-esm.js && web-test-runner --config web-test-runner.esm.config.mjs",
    "test": "npm run test:node:cjs && npm run test:node:esm && npm run test:browser:cjs && npm run test:browser:esm"
  },
  "dependencies": {}
}
